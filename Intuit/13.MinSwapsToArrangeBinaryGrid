https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid

int minSwaps(vector<vector<int>>& grid) {
       int n= grid.size() ;
        vector<int> trailingZeroes(n,-1);
        for(int i=0;i<n;i++){
            int j=n-1;
            int zeroes=0;
            while(j>=0 && grid[i][j]==0){
                j--;
                zeroes++;
            }
            trailingZeroes[i]= zeroes;
        }
        
        int swaps=0;
        for(int i=0;i<n;i++){
            
            
            if(trailingZeroes[i]<n-1-i){
                int j=i+1;
                while(j<n && trailingZeroes[j]<n-i-1) j++;
                	if(j == n) return -1;

			while(j > i)
			{
				swap(trailingZeroes[j], trailingZeroes[j-1]);
				j--;
				swaps++;
			}
		}
	}
	return swaps;
}
