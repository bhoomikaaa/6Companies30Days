Possible words from phone digits

void solve(int i, string res,unordered_map<int,string>hmap, int a[], int N, vector<string>&ans)
    {
        if(i>=N){
            ans.push_back(res);
            return;
        }
        int key=a[i];  // store the value of curr element into key
        for(char ch: hmap[key]){ // traverse ch by ch in the string 
        // for eg if key is 2 then value is a,b,c
            res+=ch; //  as the above example a gets add to res string in the first call
            solve(i+1,res,hmap,a,N,ans); // recursive call for next element of array
       // if next element is 3 then string is def  (it would be called with a in first iter.)   
            res.pop_back();
        }
        
        
        
    }
    
    
//Function to find list of all words possible by pressing given numbers.
    vector<string> possibleWords(int a[], int N)
    {
        unordered_map<int,string>hmap;
        hmap[1]="";
        hmap[2]="abc";
         hmap[3]="def";
          hmap[4]="ghi";
           hmap[5]="jkl";
            hmap[6]="mno";
             hmap[7]="pqrs";
              hmap[8]="tuv";
               hmap[9]="wxyz";
                hmap[10]="*";
                 hmap[11]="0";
                  hmap[12]="#";
                  string res="";
                  vector<string> ans;
                  solve(0,res,hmap,a,N,ans);
                  return ans;
          
    }
